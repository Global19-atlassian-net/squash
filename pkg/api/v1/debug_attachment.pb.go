// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: debug_attachment.proto

package v1 // import "github.com/solo-io/squash/pkg/api/v1"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"

import bytes "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
// @solo-kit:resource.short_name=debatt
// @solo-kit:resource.plural_name=debugattachments
// @solo-kit:resource.resource_groups=api.squash.solo.io
//
// Attachments store the information needed for squash to coordinate a debugging session
type DebugAttachment struct {
	Metadata             core.Metadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata"`
	Status               core.Status   `protobuf:"bytes,2,opt,name=status" json:"status" testdiff:"ignore"`
	Attachment           string        `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Debugger             string        `protobuf:"bytes,4,opt,name=debugger,proto3" json:"debugger,omitempty"`
	Image                string        `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	ProcessName          string        `protobuf:"bytes,6,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Node                 string        `protobuf:"bytes,7,opt,name=node,proto3" json:"node,omitempty"`
	MatchRequest         bool          `protobuf:"varint,8,opt,name=match_request,json=matchRequest,proto3" json:"match_request,omitempty"`
	DebugServerAddress   string        `protobuf:"bytes,9,opt,name=debug_server_address,json=debugServerAddress,proto3" json:"debug_server_address,omitempty"`
	State                string        `protobuf:"bytes,10,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DebugAttachment) Reset()         { *m = DebugAttachment{} }
func (m *DebugAttachment) String() string { return proto.CompactTextString(m) }
func (*DebugAttachment) ProtoMessage()    {}
func (*DebugAttachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_debug_attachment_dfc4221829e8ab42, []int{0}
}
func (m *DebugAttachment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugAttachment.Unmarshal(m, b)
}
func (m *DebugAttachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugAttachment.Marshal(b, m, deterministic)
}
func (dst *DebugAttachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugAttachment.Merge(dst, src)
}
func (m *DebugAttachment) XXX_Size() int {
	return xxx_messageInfo_DebugAttachment.Size(m)
}
func (m *DebugAttachment) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugAttachment.DiscardUnknown(m)
}

var xxx_messageInfo_DebugAttachment proto.InternalMessageInfo

func (m *DebugAttachment) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *DebugAttachment) GetStatus() core.Status {
	if m != nil {
		return m.Status
	}
	return core.Status{}
}

func (m *DebugAttachment) GetAttachment() string {
	if m != nil {
		return m.Attachment
	}
	return ""
}

func (m *DebugAttachment) GetDebugger() string {
	if m != nil {
		return m.Debugger
	}
	return ""
}

func (m *DebugAttachment) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *DebugAttachment) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *DebugAttachment) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *DebugAttachment) GetMatchRequest() bool {
	if m != nil {
		return m.MatchRequest
	}
	return false
}

func (m *DebugAttachment) GetDebugServerAddress() string {
	if m != nil {
		return m.DebugServerAddress
	}
	return ""
}

func (m *DebugAttachment) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func init() {
	proto.RegisterType((*DebugAttachment)(nil), "squash.solo.io.DebugAttachment")
}
func (this *DebugAttachment) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DebugAttachment)
	if !ok {
		that2, ok := that.(DebugAttachment)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if this.Attachment != that1.Attachment {
		return false
	}
	if this.Debugger != that1.Debugger {
		return false
	}
	if this.Image != that1.Image {
		return false
	}
	if this.ProcessName != that1.ProcessName {
		return false
	}
	if this.Node != that1.Node {
		return false
	}
	if this.MatchRequest != that1.MatchRequest {
		return false
	}
	if this.DebugServerAddress != that1.DebugServerAddress {
		return false
	}
	if this.State != that1.State {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

func init() {
	proto.RegisterFile("debug_attachment.proto", fileDescriptor_debug_attachment_dfc4221829e8ab42)
}

var fileDescriptor_debug_attachment_dfc4221829e8ab42 = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xbf, 0xee, 0xd3, 0x30,
	0x10, 0x80, 0x09, 0xfd, 0x43, 0xea, 0x16, 0x10, 0x56, 0x54, 0x99, 0x0e, 0x6d, 0x29, 0x0c, 0x15,
	0x82, 0x84, 0xc2, 0x82, 0xd8, 0x5a, 0x21, 0x31, 0xc1, 0x90, 0x6e, 0x2c, 0x91, 0x9b, 0x5c, 0x1d,
	0xab, 0x24, 0x4e, 0x6d, 0xa7, 0x0f, 0xc1, 0x93, 0xf0, 0x28, 0x3c, 0x45, 0x07, 0x1e, 0x81, 0x27,
	0x40, 0x39, 0xa7, 0x05, 0xa4, 0xdf, 0xd0, 0x29, 0xbe, 0xfb, 0xee, 0x8b, 0xee, 0x7c, 0x26, 0xe3,
	0x0c, 0x76, 0xb5, 0x48, 0xb8, 0xb5, 0x3c, 0xcd, 0x0b, 0x28, 0x6d, 0x58, 0x69, 0x65, 0x15, 0x7d,
	0x64, 0x8e, 0x35, 0x37, 0x79, 0x68, 0xd4, 0x37, 0x15, 0x4a, 0x35, 0x09, 0x84, 0x12, 0x0a, 0x51,
	0xd4, 0x9c, 0x5c, 0xd5, 0x64, 0x25, 0xa4, 0xcd, 0xeb, 0x5d, 0x98, 0xaa, 0x22, 0x6a, 0x2a, 0x5f,
	0x4b, 0xe5, 0xbe, 0x07, 0x69, 0x23, 0x5e, 0xc9, 0xe8, 0xb4, 0x8a, 0x0a, 0xb0, 0x3c, 0xe3, 0x96,
	0xb7, 0x4a, 0x74, 0x83, 0x62, 0x2c, 0xb7, 0xb5, 0x69, 0x85, 0x57, 0x37, 0x08, 0x1a, 0xf6, 0xae,
	0x7a, 0xf1, 0xbd, 0x43, 0x1e, 0x7f, 0x6c, 0x46, 0x5a, 0x5f, 0x27, 0xa2, 0xef, 0x89, 0x7f, 0x69,
	0x82, 0x79, 0x73, 0x6f, 0x39, 0x7c, 0x3b, 0x0e, 0x53, 0xa5, 0xe1, 0x32, 0x5c, 0xf8, 0xb9, 0xa5,
	0x9b, 0xee, 0xcf, 0xf3, 0xec, 0x5e, 0x7c, 0xad, 0xa6, 0x9f, 0x48, 0xdf, 0xf5, 0xc2, 0xee, 0xa3,
	0x17, 0xfc, 0xef, 0x6d, 0x91, 0x6d, 0x9e, 0x36, 0xd6, 0xef, 0xf3, 0xec, 0x89, 0x05, 0x63, 0x33,
	0xb9, 0xdf, 0x7f, 0x58, 0x48, 0x51, 0x2a, 0x0d, 0x8b, 0xb8, 0xd5, 0xe9, 0x94, 0x90, 0xbf, 0x57,
	0xcc, 0x3a, 0x73, 0x6f, 0x39, 0x88, 0xff, 0xc9, 0xd0, 0x09, 0xf1, 0x71, 0x11, 0x02, 0x34, 0xeb,
	0x22, 0xbd, 0xc6, 0x34, 0x20, 0x3d, 0x59, 0x70, 0x01, 0xac, 0x87, 0xc0, 0x05, 0xf4, 0x19, 0x19,
	0x55, 0x5a, 0xa5, 0x60, 0x4c, 0x52, 0xf2, 0x02, 0x58, 0x1f, 0xe1, 0xb0, 0xcd, 0x7d, 0xe1, 0x05,
	0x50, 0x4a, 0xba, 0xa5, 0xca, 0x80, 0x3d, 0x40, 0x84, 0x67, 0xfa, 0x9c, 0x3c, 0x2c, 0xb8, 0x4d,
	0xf3, 0x44, 0xc3, 0xb1, 0x06, 0x63, 0x99, 0x3f, 0xf7, 0x96, 0x7e, 0x3c, 0xc2, 0x64, 0xec, 0x72,
	0xf4, 0x0d, 0x09, 0xdc, 0xb3, 0x30, 0xa0, 0x4f, 0xa0, 0x13, 0x9e, 0x65, 0x1a, 0x8c, 0x61, 0x03,
	0xfc, 0x11, 0x45, 0xb6, 0x45, 0xb4, 0x76, 0xa4, 0xe9, 0xb1, 0x99, 0x14, 0x18, 0x71, 0x3d, 0x62,
	0xb0, 0x79, 0xf9, 0xe3, 0xd7, 0xd4, 0xfb, 0xfa, 0xe2, 0xae, 0x05, 0xe2, 0xeb, 0x8a, 0xaa, 0x83,
	0x68, 0x57, 0xb8, 0xeb, 0xe3, 0xfe, 0xde, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x76, 0xd1,
	0x45, 0x91, 0x02, 0x00, 0x00,
}
